exit
Starlink.all.size
 Starlink.all.filter { |starlink| (starlink[:height_km] <= max_height && starlink[:height_km] >= min_height) }.size


min_height
 Starlink.all.filter { |starlink| (starlink[:height_km] <= max_height && starlink[:height_km] >= min_height) }.size
puts starlinks[0..amount].filter { |starlink| starlink[:height_km] <= 600 && starlink[:height_km] >= 400}.size 
n
c
starlinks[0..amount]
starlinks
starlinks.slice!(0,amount)
starlinks
amount
starlinks.size
starlinks
c
starlinks.size
c
starlinks
c
starlinks
c
starlinks
starlinks.sort_by { |starlink| [starlink[:distance]]}
starlinks
c
starlinks
c
s
Starlink.all.slice(0,3)
distance = Haversine.distance(starlink[:latitude],starlink[:longitude],latitude,longitude)
starlink
starlink.store(:distance,distance.to_km)
starlink
starlink.store(:distance,distance.to_km)
distance.to_km
distance = Haversine.distance(starlink[:latitude],starlink[:longitude],latitude,longitude)
starlink[:latitude]
distance = Haversine.distance(starlink[:latitude],starlink[:longitude],latitude,longitude)
latitude
starlink
distance = Haversine.distance(starlink.latitude,starlink.longitude,latitude,longitude)
distance.to_km
distance = Haversine.distance(20.000,20.000,10.000,10.000)
asd
distance = Haversine.distance(20.000,20.000,10.000,10.000)
latitude
distance = Haversine.distance(starlink.latitude,starlink.longitude,latitude,longitude)
starlink
starlink.store(:distance,30.00)
starlink
starlink.store(:distance,30.00)
starlink
slcrc
amount
longitude
latitude
c
